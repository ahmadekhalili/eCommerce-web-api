# Generated by Django 4.0.3 on 2023-06-15 11:33

import ckeditor_uploader.fields
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=25, null=True, verbose_name='name')),
                ('name_fa', models.CharField(blank=True, max_length=25, null=True, verbose_name='name')),
                ('name_en', models.CharField(blank=True, max_length=25, null=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_fa', models.SlugField(allow_unicode=True, blank=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_en', models.SlugField(allow_unicode=True, blank=True, db_index=False, null=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'brand',
                'verbose_name_plural': 'brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
                ('name_fa', models.CharField(max_length=50, null=True, unique=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=50, null=True, unique=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, db_index=False, verbose_name='slug')),
                ('slug_fa', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_en', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('level', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)], verbose_name='level')),
                ('levels_afterthis', models.PositiveSmallIntegerField(blank=True, default=0)),
                ('previous_father_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('all_childes_id', models.TextField(blank=True, default='')),
                ('post_product', models.CharField(default='product', max_length=10, verbose_name='post or product')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('level',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('1', 'not checked'), ('2', 'confirmed'), ('3', 'not confirmed'), ('4', 'deleted')], default='1', max_length=1, verbose_name='status')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='published date')),
                ('content', models.TextField(validators=[django.core.validators.MaxLengthValidator(500)], verbose_name='content')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.PositiveIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], verbose_name='group')),
                ('name', models.CharField(max_length=25, unique=True, verbose_name='name')),
                ('name_fa', models.CharField(max_length=25, null=True, unique=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=25, null=True, unique=True, verbose_name='name')),
                ('verbose_name', models.CharField(max_length=25, verbose_name='verbose name')),
                ('verbose_name_fa', models.CharField(max_length=25, null=True, verbose_name='verbose name')),
                ('verbose_name_en', models.CharField(max_length=25, null=True, verbose_name='verbose name')),
            ],
            options={
                'verbose_name': 'Filter',
                'verbose_name_plural': 'Filters',
            },
        ),
        migrations.CreateModel(
            name='Filter_Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='name')),
                ('name_fa', models.CharField(max_length=25, null=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=25, null=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, db_index=False, verbose_name='slug')),
                ('slug_fa', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_en', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Filter Attribute',
                'verbose_name_plural': 'Filter Attributes',
                'ordering': ('filterr',),
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main.models.image_path_selector, verbose_name='image')),
                ('alt', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_fa', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_en', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
            ],
            options={
                'verbose_name': 'Image',
                'verbose_name_plural': 'Images',
            },
        ),
        migrations.CreateModel(
            name='Image_icon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main.models.icon_path_selector, verbose_name='image')),
                ('alt', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_fa', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_en', models.CharField(max_length=55, null=True, unique=True, verbose_name='alt')),
                ('path', models.CharField(default='products', max_length=20, verbose_name='path')),
            ],
            options={
                'verbose_name': 'Image icon',
                'verbose_name_plural': 'Image icones',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('title_fa', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='title')),
                ('slug', models.SlugField(allow_unicode=True, db_index=False, verbose_name='slug')),
                ('slug_fa', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_en', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('meta_title', models.CharField(blank=True, default='', max_length=60, verbose_name='meta title')),
                ('meta_title_fa', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='meta title')),
                ('meta_title_en', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='meta title')),
                ('meta_description', models.TextField(blank=True, default='', validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('meta_description_fa', models.TextField(blank=True, default='', null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('meta_description_en', models.TextField(blank=True, default='', null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('brief_description', models.TextField(validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('brief_description_fa', models.TextField(null=True, validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('brief_description_en', models.TextField(null=True, validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('detailed_description', models.TextField(blank=True, verbose_name='detailed description')),
                ('detailed_description_fa', models.TextField(blank=True, null=True, verbose_name='detailed description')),
                ('detailed_description_en', models.TextField(blank=True, null=True, verbose_name='detailed description')),
                ('instagram_link', models.CharField(blank=True, default='', max_length=255, verbose_name='instagram link')),
                ('visible', models.BooleanField(default=True, verbose_name='delete')),
                ('published_date', models.DateTimeField(auto_now_add=True, verbose_name='published date')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=150), blank=True, size=None)),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='PostDetailMongo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('json', djongo.models.fields.JSONField()),
            ],
            options={
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='name')),
                ('name_fa', models.CharField(max_length=150, null=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=150, null=True, verbose_name='name')),
                ('slug', models.SlugField(allow_unicode=True, db_index=False, verbose_name='slug')),
                ('slug_fa', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('slug_en', models.SlugField(allow_unicode=True, db_index=False, null=True, verbose_name='slug')),
                ('meta_title', models.CharField(blank=True, default='', max_length=60, verbose_name='meta title')),
                ('meta_title_fa', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='meta title')),
                ('meta_title_en', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='meta title')),
                ('meta_description', models.TextField(blank=True, default='', validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('meta_description_fa', models.TextField(blank=True, default='', null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('meta_description_en', models.TextField(blank=True, default='', null=True, validators=[django.core.validators.MaxLengthValidator(160)], verbose_name='meta description')),
                ('brief_description', models.TextField(validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('brief_description_fa', models.TextField(null=True, validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('brief_description_en', models.TextField(null=True, validators=[django.core.validators.MaxLengthValidator(1000)], verbose_name='brief description')),
                ('detailed_description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='detailed description')),
                ('detailed_description_fa', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='detailed description')),
                ('detailed_description_en', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='detailed description')),
                ('price', models.DecimalField(decimal_places=2, default='0', max_digits=10, verbose_name='price')),
                ('price_fa', models.DecimalField(decimal_places=2, default='0', max_digits=10, null=True, verbose_name='price')),
                ('price_en', models.DecimalField(decimal_places=2, default='0', max_digits=10, null=True, verbose_name='price')),
                ('available', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('available_fa', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('available_en', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('visible', models.BooleanField(db_index=True, default=True, verbose_name='delete')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created date')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated date')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='stock')),
                ('stock_fa', models.PositiveIntegerField(default=0, null=True, verbose_name='stock')),
                ('stock_en', models.PositiveIntegerField(default=0, null=True, verbose_name='stock')),
                ('weight', models.FloatField(null=True, verbose_name='weight')),
                ('weight_fa', models.FloatField(null=True, verbose_name='weight')),
                ('weight_en', models.FloatField(null=True, verbose_name='weight')),
                ('size', models.CharField(blank=True, max_length=25, verbose_name='size')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.brand', verbose_name='brand')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.category', verbose_name='category')),
                ('filter_attributes', models.ManyToManyField(blank=True, to='main.filter_attribute', verbose_name='filter attributes')),
                ('filter_attributes_en', models.ManyToManyField(blank=True, null=True, to='main.filter_attribute', verbose_name='filter attributes')),
                ('filter_attributes_fa', models.ManyToManyField(blank=True, null=True, to='main.filter_attribute', verbose_name='filter attributes')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductDetainMongo',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('json', djongo.models.fields.JSONField()),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submiters', models.PositiveIntegerField(default=0, verbose_name='submiters')),
                ('rate', models.DecimalField(decimal_places=1, default='0', max_digits=2, verbose_name='rate')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10, unique=True, verbose_name='key')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('name_fa', models.CharField(max_length=30, null=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=30, null=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=10, unique=True, verbose_name='key')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('name_fa', models.CharField(max_length=30, null=True, verbose_name='name')),
                ('name_en', models.CharField(max_length=30, null=True, verbose_name='name')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='towns', to='main.state', to_field='key', verbose_name='state')),
            ],
            options={
                'verbose_name': 'Town',
                'verbose_name_plural': 'Towns',
            },
        ),
        migrations.CreateModel(
            name='SmallImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=main.models.small_path_selector, verbose_name='image')),
                ('alt', models.CharField(blank=True, max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_fa', models.CharField(blank=True, max_length=55, null=True, unique=True, verbose_name='alt')),
                ('alt_en', models.CharField(blank=True, max_length=55, null=True, unique=True, verbose_name='alt')),
                ('father', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.image', verbose_name='father')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smallimages', to='main.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'SmallImage',
                'verbose_name_plural': 'SmallImages',
            },
        ),
        migrations.CreateModel(
            name='ShopFilterItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_stock', models.PositiveIntegerField(blank=True)),
                ('previous_stock_fa', models.PositiveIntegerField(blank=True, null=True)),
                ('previous_stock_en', models.PositiveIntegerField(blank=True, null=True)),
                ('stock', models.PositiveIntegerField(verbose_name='stock')),
                ('stock_fa', models.PositiveIntegerField(null=True, verbose_name='stock')),
                ('stock_en', models.PositiveIntegerField(null=True, verbose_name='stock')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='price')),
                ('price_fa', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='price')),
                ('price_en', models.DecimalField(decimal_places=2, max_digits=10, null=True, verbose_name='price')),
                ('available', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('available_fa', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('available_en', models.BooleanField(db_index=True, default=False, verbose_name='available')),
                ('filter_attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.filter_attribute', verbose_name='filter attribute')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopfilteritems', to='main.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'shopfilteritem',
                'verbose_name_plural': 'shopfilteritems',
                'ordering': ['-product'],
            },
        ),
        migrations.AddField(
            model_name='product',
            name='rating',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.rating', verbose_name='rating'),
        ),
    ]
